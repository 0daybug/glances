{"body":"[![Flattr this git repo](http://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/thing/484466/nicolargoglances-on-GitHub)\r\n\r\n=============================\r\nGlances -- Eye on your system\r\n=============================\r\n\r\n## Description\r\n\r\nGlances is a CLI curses based monitoring tool for GNU/Linux and BSD OS.\r\n\r\nGlances uses the PsUtil library to get information from your system.\r\n\r\nIt is developed in Python.\r\n\r\nConsole (80x24) screenshot:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/screenshot.png)\r\n\r\nWide terminal (> 90x24) screenshot:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/screenshot-wide.png)\r\n\r\n## Installation\r\n\r\nPre-requisites (information for packagers):\r\n\r\n* Python 2.6+ (not tested with Python 3+)\r\n* build-essential (for installation via Pypi and setup.py)\r\n* python-dev (for installation via Pypi)\r\n* python-setuptools (for the installation via setup.py)\r\n* python-psutil 0.4.1+ (replace the old libstatgrab's lib)\r\n* python-jinja2 2.0+ (optional for HTML export)\r\n\r\n### From package manager (very easy way)\r\n\r\nPackages exist for Arch, Fedora, Redhat, FreeBSD...\r\n\r\n### From PyPi (easy and cross platform way)\r\n\r\nPyPi is an official Python package manager.\r\n\r\nYou first need to install pypi on your system. For example on Debian/Ubuntu:\r\n\r\n    $ sudo apt-get install python-pip build-essential python-dev\r\n\r\nThen install the latest Glances version:\r\n\r\n    $ sudo pip install glances\r\n        \r\nNote: if you are behind an HTTP Proxy, you should use\r\n\r\n    $ sudo pip install --proxy=user:password@url:port glances\r\n\r\n### From PPA (easy way for Ubuntu/Mint...)\r\n\r\nArnaud Hartmann (thanks to him !) maintains a PPA with the latest Glances version:\r\n\r\nThe PPA is available for Ubuntu version 9.10 to 12.04.\r\n\r\nTo install the PPA just enter:\r\n\r\n    $ sudo add-apt-repository ppa:arnaud-hartmann/glances-stable\r\n    $ sudo apt-get update\r\n\r\nThen install Glances:\r\n\r\n    $ sudo apt-get install glances\r\n\r\n### From [Homebrew](http://mxcl.github.com/homebrew/) via PyPi (OS X)\r\n\r\n    $ brew install brew-pip\r\n\t$ export PYTHONPATH=$(brew --prefix)/lib/python2.7/site-packages\r\n\t$ brew pip Glances\r\n\r\n### From source\r\n\r\nGet the latest version:\r\n\r\n\t$ rm -rf /tm/nicolargo-glances-* \r\n    $ wget -O /tmp/glances-last.tgz https://github.com/nicolargo/glances/tarball/master\r\n\r\nGlances use a standard GNU style installer (for a Debian like system):\r\n\r\n    $ sudo apt-get install python-setuptools build-essential python-dev\r\n    $ cd /tmp\r\n\t$ tar zxvf glances-last.tgz\r\n\t$ cd nicolargo-glances-*\r\n\t$ sudo python setup.py install\r\n\r\n## Running\r\n\r\nEasy way (that's all folks !):\r\n\r\n\t$ glances\r\n\r\n## User guide\r\n\r\nBy default, stats are refreshed every second, to change this setting, you can\r\nuse the -t option. For example to set the refresh rate to 5 seconds:\r\n\r\n\t$ glances -t 5\r\n\r\nImportants stats are colored:\r\n\r\n* GREEN:   stat counter is \"OK\"\r\n* BLUE:    stat counter is \"CAREFUL\"\r\n* MAGENTA: stat counter is \"WARNING\"\r\n* RED:     stat counter is \"CRITICAL\"\r\n\r\nWhen Glances is running, you can press:\r\n\r\n* 'h' to display a help message with the keys you can press\r\n* 'a' to set the automatic mode. The processes are sorted automatically\r\n\r\n    If CPU > 70%, sort by process \"CPU consumption\"\r\n\r\n    If MEM > 70%, sort by process \"memory size\"\r\n\r\n* 'c' to sort the processes list by CPU consumption\r\n* 'd' Disable or enable the disk IO stats\r\n* 'f' Disable or enable the file system stats\r\n* 'l' Disable or enable the logs\r\n* 'm' to sort the processes list by process MEM\r\n* 'n' Disable or enable the network interfaces stats\r\n* 'p' to sort by process name\r\n* 'q' Exit\r\n\r\n### Header\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/header.png)\r\n\r\nThe header shows the host name and the operating system name, version and architecture.\r\n\r\n### CPU\r\n\r\nShort view:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/cpu.png)\r\n\r\nLong view (only available if your terminal is wide enough)\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/cpu-wide.png)\r\n\r\nThe CPU stats are shown as a percentage and for the configured refresh\r\ntime. The total CPU usage is displayed on the first line.\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/percpu.png)\r\n\r\nIf horizontal space is available, per core CPU infomations are displayed. \r\n\r\nColor code used:\r\n\r\nIf user|kernel|nice CPU is < 50%, then status is set to \"OK\".\r\n\r\nIf user|kernel|nice CPU is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf user|kernel|nice CPU is > 70%, then status is set to \"WARNING\".\r\n\r\nIf user|kernel|nice CPU is > 90%, then status is set to \"CRITICAL\".\r\n\r\n### Load\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/load.png)\r\n\r\nOn the Nosheep blog, Zach defines average load: \"In short it is the\r\naverage sum of the number of processes waiting in the run-queue plus the\r\nnumber currently executing over 1, 5, and 15 minute time periods.\"\r\n\r\nGlances gets the number of CPU cores to adapt the alerts. With Glances,\r\nalerts on average load are only set on 5 and 15 mins. The first line \r\nalso display the number of CPU core.\r\n\r\nIf average load is < O.7*Core, then status is set to \"OK\".\r\n\r\nIf average load is > O.7*Core, then status is set to \"CAREFUL\".\r\n\r\nIf average load is > 1*Core, then status is set to \"WARNING\".\r\n\r\nIf average load is > 5*Core, then status is set to \"CRITICAL\".\r\n\r\n### Memory\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/mem.png)\r\n\r\nGlances uses three columns: memory (RAM), \"real\" and swap.\r\n\r\nReal used memory is: used - cache.\r\n\r\nReal free memory is: free + cache.\r\n\r\nWith Glances, alerts are only set for on used swap and real memory.\r\n\r\nIf memory is < 50%, then status is set to \"OK\".\r\n\r\nIf memory is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf memory is > 70%, then status is set to \"WARNING\".\r\n\r\nIf memory is > 90%, then status is set to \"CRITICAL\".\r\n\r\n### Network bit rate\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/network.png)\r\n\r\nGlances display the network interface bit rate. The unit is adapted\r\ndynamicaly (bits per second, Kbits per second, Mbits per second...).\r\n\r\nAlerts are set only if the network interface maximum speed is available.\r\n\r\nIf bit rate is < 50%, then status is set to \"OK\".\r\n\r\nIf bit rate is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf bit rate is > 70%, then status is set to \"WARNING\".\r\n\r\nIf bit rate is > 90%, then status is set to \"CRITICAL\".\r\n\r\nFor example, on a 100 Mbps Ethernet interface, the warning status is set\r\nif the bit rate is higher than 70 Mbps.\r\n\r\n### Disk I/O\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/diskio.png)\r\n\r\nGlances displays the disk I/O throughput. The unit is adapted dynamically\r\n(bytes per second, Kbytes per second, Mbytes per second...).\r\n\r\nThere is no alert on this information.\r\n\r\n### Filesystem\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/fs.png)\r\n\r\nGlances displays the total and used filesytem disk space. The unit is\r\nadapted dynamically (bytes per second, Kbytes per second, Mbytes per\r\nsecond...).\r\n\r\nAlerts are set for used disk space:\r\n\r\nIf disk used is < 50%, then status is set to \"OK\".\r\n\r\nIf disk used is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf disk used is > 70%, then status is set to \"WARNING\".\r\n\r\nIf disk used is > 90%, then status is set to \"CRITICAL\".\r\n\r\n### Processes\r\n\r\nShort view:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/processlist.png)\r\n\r\nLong view (only available if your terminal is wide enough)\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/processlist-wide.png)\r\n\r\nGlances displays a summary and a list of processes.\r\n\r\nBy default (or if you hit the 'a' key) the process list is automatically\r\nsorted by CPU of memory consumption.\r\n\r\nThe number of processes in the list is adapted to the screen size.\r\n\r\n* VIRT: Virtual memory size (in byte)\r\n* REST: Amount of resident memory (in byte)\r\n* CPU%: % of CPU used by the process\r\n* MEM%: % of MEM used by the process\r\n* PID: Process ID\r\n* USER: Process user ID\r\n* NI: Nice level of the process\r\n* S: Process status\r\n\r\n   R - Running\r\n   D - Sleeping (may not be interrupted)\r\n   S - Sleeping (may be interrupted)\r\n   T - Traced or stopped\r\n   Z - Zombie or \"hung\" process\r\n\r\n* IO READ and WRITE: Per process IO read and write\r\n* TIME+:  Cumulative CPU time used\r\n* NAME: Process name or command line\r\n\r\n\r\n### Logs\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/logs.png)\r\n\r\nA logs list is displayed in the bottom of the screen if (and only if):\r\n\r\n* at least one WARNING or CRITICAL alert was occured.\r\n* space is available in the bottom of the console/terminal\r\n\r\nThere is one line per alert with the following information:\r\n\r\n* start date\r\n* end date\r\n* alert name\r\n* (min/avg/max) values\r\n\r\n### Footer\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/footer.png)\r\n\r\nGlances displays the current time/date and access to the embedded help screen.\r\n\r\n## Localisation\r\n\r\nTo generate french locale execute as root or sudo :\r\ni18n_francais_generate.sh\r\n\r\nTo generate spanish locale execute as root or sudo :\r\ni18n_espanol_generate.sh\r\n","tagline":"Glances an Eye on your system","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA–115490–11","name":"Glances"}