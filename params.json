{"name":"Glances","tagline":"Glances an Eye on your system","body":"[![Flattr this git repo](http://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/thing/484466/nicolargoglances-on-GitHub)\r\n[![Build Status](https://travis-ci.org/nicolargo/glances.png?branch=master)](https://travis-ci.org/nicolargo/glances)\r\n\r\n=============================\r\nGlances -- Eye on your system\r\n=============================\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/glances-white-256.png)\r\n\r\n## Description\r\n\r\nGlances is a CLI curses based monitoring tool for GNU/Linux and BSD OS.\r\n\r\nGlances uses the PsUtil library to get information from your system.\r\n\r\nIt is developed in Python.\r\n\r\nConsole (80x24) screenshot:\r\n\r\n![screenshot](https://raw.github.com/nicolargo/glances/master/doc/screenshot.png)\r\n\r\nWide terminal (> 90x24) screenshot:\r\n\r\n![screenshot](https://raw.github.com/nicolargo/glances/master/doc/screenshot-wide.png)\r\n\r\n## Installation\r\n\r\nPre-requisites (information for packagers):\r\n\r\n* Python 2.6+ (not tested with Python 3+)\r\n* build-essential (for installation via Pypi and setup.py)\r\n* python-dev (for installation via Pypi)\r\n* python-setuptools (for the installation via setup.py)\r\n* python-psutil 0.4.1+ (replace the old libstatgrab's lib)\r\n* python-jinja2 2.0+ (optional for HTML export)\r\n* pysensors (Python library for sensors stats)\r\n\r\n### From package manager (very easy way)\r\n\r\nPackages exist for Debian (SID), Arch, Fedora, Redhat, FreeBSD...\r\n\r\nCheck if the version is the latest one.\r\n\r\n### From PyPi (easy and cross platform way)\r\n\r\nPyPi is an official Python package manager.\r\n\r\nYou first need to install PyPi on your system. For example on Debian/Ubuntu:\r\n\r\n    $ sudo apt-get update\r\n    $ sudo apt-get install python-pip build-essential python-dev\r\n\r\nThen install the latest Glances version:\r\n\r\n    $ sudo pip install Glances\r\n\r\nNote: if you are behind an HTTP Proxy, you should use instead:\r\n\r\n    $ sudo pip install --proxy=user:password@url:port Glances\r\n\r\n### From [Homebrew](http://mxcl.github.com/homebrew/) for Mac OS X\r\n\r\n    $ brew install brew-pip\r\n    $ export PYTHONPATH=$(brew --prefix)/lib/python2.7/site-packages\r\n    $ brew pip Glances\r\n\r\nIf you have the following error:\r\n\r\n    Error: Failed executing: pip install glances==1.X --install-option=--prefix=/usr/local/XXX/glances/1.X (.rb:)\r\n\r\nthen try to run:\r\n\r\n    $ pip install glances==1.X --install-option=--prefix=/usr/local/XXX/glances/1.X\r\n    $ brew link Glances\r\n\r\n### Concerning Windows operating system\r\n\r\nThanks to Nicolas Bourges, a Windows installer is available:\r\n\r\n64 bits: https://s3.amazonaws.com/glances/glances-1.6.0-x64.exe\r\n32 bits: https://s3.amazonaws.com/glances/glances-1.6.0-x86.exe\r\n\r\nIf you want to install it manually, please read the following procedure.\r\n\r\nWindows operating system only support the Glances in server mode. So if you ran Glances on Windows, it will be automaticaly running in server mode.\r\n\r\nTo install Glances on you system:\r\n\r\n    * Install [Python for Windows](http://www.python.org/getit/)\r\n    * Install the [PsUtil lib](https://code.google.com/p/psutil/downloads/list)\r\n    * Download the latest [Glances version](https://raw.github.com/nicolargo/glances/master/glances/glances.py)\r\n\r\nI am looking for a contributor to package Glances for Windows (for exemple using [PyInstaller](http://www.pyinstaller.org/)).\r\n\r\n### From source\r\n\r\nGet the latest version (form GitHub):\r\n\r\n    $ rm -rf /tmp/nicolargo-glances-*\r\n    $ wget -O /tmp/glances-last.tgz https://github.com/nicolargo/glances/tarball/master\r\n\r\nGlances use a standard GNU style installer (for a Debian like system):\r\n\r\n    $ sudo apt-get update\r\n    $ sudo apt-get install python-setuptools build-essential python-dev\r\n    $ cd /tmp\r\n    $ tar zxvf glances-last.tgz\r\n    $ cd nicolargo-glances-*\r\n    $ sudo python setup.py install\r\n\r\n## Configuration\r\n\r\nNo configuration is needed to use Glances.\r\n\r\nFurthermore, the release 1.6 introduces a configuration file to setup limits.\r\n\r\nThe default configuration file is under:\r\n\r\n    /etc/glances/glances.conf (Linux)\r\nor\r\n\r\n    /usr/local/etc/glances/glances.conf (*BSD and OS X)\r\n\r\nTo override the default configuration, you can copy the `glances.conf` file to\r\nyour `$XDG_CONFIG_HOME` directory (e.g. Linux):\r\n\r\n    mkdir -p $XDG_CONFIG_HOME/glances\r\n    cp /etc/glances/glances.conf $XDG_CONFIG_HOME/glances/\r\n\r\nOn OS X, you should copy the configuration file to `~/Library/Application Support/glances/`.\r\n\r\n## Running\r\n\r\n### In standalone mode\r\n\r\nIf you want to monitor your local machine, just run:\r\n\r\n    $ glances\r\n\r\n### In client/server mode\r\n\r\nIf you want to remotely monitor a machine (called server) from another one (called client).\r\n\r\nRun this command on the server:\r\n\r\n    server$ glances -s\r\n\r\nand this one on the client:\r\n\r\n    client$ glances -c @server\r\n\r\nwhere @server is the IP address or hostname of the server\r\n\r\nGlances uses a [XML/RPC](http://docs.python.org/2/library/simplexmlrpcserver.html) server and can be used by another client software.\r\n\r\nIn server mode, you can set the bind address (-B ADDRESS) and listenning TCP port (-p PORT).\r\n\r\nIn client mode, you can set the TCP port of the server (-p port).\r\n\r\nDefault binding address is 0.0.0.0 (Glances will listen on all the networks interfaces) and TCP port is 61209.\r\n\r\nIn client/server mode, limits are set by the server side.\r\n\r\nThe version 1.6 introduces a optionnal password to access to the server (-P password).\r\n\r\n## User guide\r\n\r\nCommand line options are:\r\n\r\n    -b\t\t    Display network rate in Byte per second\r\n\t-B @IP|host\tBind server to the given IP or host NAME\r\n\t-c @IP|host\tConnect to a Glances server\r\n\t-C file\t\tPath to the configuration file\r\n\t-d\t\t    Disable disk I/O module\r\n\t-e\t\t    Enable the sensors module (Linux-only)\r\n\t-f file\t\tSet the output folder (HTML) or file (CSV)\r\n\t-h\t\t    Display the syntax and exit\r\n\t-m\t\t    Disable mount module\r\n\t-n\t\t    Disable network module\r\n\t-o output\tDefine additional output (available: HTML or CSV)\r\n\t-p PORT\t\tDefine the client or server TCP port (default: 61209)\r\n\t-P password\tClient/server password\r\n\t-r\t\t    Do not list processes (significant CPU use reduction)\r\n\t-s\t\t    Run Glances in server mode\r\n\t-t sec\t\tSet the refresh time in seconds (default: 3)\r\n\t-v\t\t    Display the version and exit\r\n\t-y\t\t    Enable the hddtemp module\r\n\t-z\t\t    Do not use the bold color attribute\r\n\r\nImportants stats are colored:\r\n\r\n* GREEN:   stat counter is \"OK\"\r\n* BLUE:    stat counter is \"CAREFUL\"\r\n* MAGENTA: stat counter is \"WARNING\"\r\n* RED:     stat counter is \"CRITICAL\"\r\n\r\nWhen Glances is running, you can press:\r\n\r\n* 'a' to set the automatic mode. The processes are sorted automatically\r\n\r\n    IF CPU IoWait > 60% sort by process \"IO read and write\"\r\n\r\n    If CPU > 70%, sort by process \"CPU consumption\"\r\n\r\n    If MEM > 70%, sort by process \"memory size\"\r\n\r\n* 'b' switch between bit/s or byte/s for network IO\r\n* 'c' sort the processes list by CPU consumption\r\n* 'd' disable or enable the disk IO stats\r\n* 'e' enable the sensors module (PySensors library is needed; Linux-only)\r\n* 'f' disable or enable the file system stats\r\n* 'h' to display a help message with the keys you can press and the limits\r\n* 'i' sort the processes list by IO rate (need root account on some OS)\r\n* 'l' disable or enable the logs\r\n* 'm' sort the processes list by process MEM\r\n* 'n' disable or enable the network interfaces stats\r\n* 'p' sort by process name\r\n* 's' disable or enable the sensor stats (only available with -e tag)\r\n* 't' View network IO as combination\r\n* 'u' View cumulative network IO\r\n* 'w' delete finished warning logs messages\r\n* 'x' delete finished warning and critical logs messages\r\n* '1' switch between global CPU and per core stats\r\n* 'q' Exit\r\n\r\n### Header\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/header.png)\r\n\r\nThe header shows the host name and the operating system name, version and architecture.\r\n\r\n### CPU\r\n\r\nShort view:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/cpu.png)\r\n\r\nIf horizontal space is available, extended CPU infomations are displayed.\r\n\r\nExtended view (only available if your terminal is wide enough)\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/cpu-wide.png)\r\n\r\nIf user click on the '1' key, per CPU stats is displayed:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/percpu.png)\r\n\r\nThe CPU stats are shown as a percentage and for the configured refresh\r\ntime. The total CPU usage is displayed on the first line.\r\n\r\nColor code used:\r\n\r\nIf user|kernel|nice CPU is < 50%, then status is set to \"OK\".\r\n\r\nIf user|kernel|nice CPU is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf user|kernel|nice CPU is > 70%, then status is set to \"WARNING\".\r\n\r\nIf user|kernel|nice CPU is > 90%, then status is set to \"CRITICAL\".\r\n\r\n### Load\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/load.png)\r\n\r\nOn the Nosheep blog, Zach defines average load: \"In short it is the\r\naverage sum of the number of processes waiting in the run-queue plus the\r\nnumber currently executing over 1, 5, and 15 minute time periods.\"\r\n\r\nGlances gets the number of CPU cores to adapt the alerts. With Glances,\r\nalerts on average load are only set on 5 and 15 mins. The first line\r\nalso display the number of CPU core.\r\n\r\nIf average load is < O.7*Core, then status is set to \"OK\".\r\n\r\nIf average load is > O.7*Core, then status is set to \"CAREFUL\".\r\n\r\nIf average load is > 1*Core, then status is set to \"WARNING\".\r\n\r\nIf average load is > 5*Core, then status is set to \"CRITICAL\".\r\n\r\n### Memory\r\n\r\nGlances uses two columns: one for the RAM and another one for the SWAP.\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/mem.png)\r\n\r\nIf space is available, Glances displays extended informations:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/mem-wide.png)\r\n\r\nWith Glances, alerts are only set for on used swap and real memory.\r\n\r\nIf memory is < 50%, then status is set to \"OK\".\r\n\r\nIf memory is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf memory is > 70%, then status is set to \"WARNING\".\r\n\r\nIf memory is > 90%, then status is set to \"CRITICAL\".\r\n\r\n### Network bit rate\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/network.png)\r\n\r\nGlances display the network interface bit rate. The unit is adapted\r\ndynamicaly (bits per second, Kbits per second, Mbits per second...).\r\n\r\nAlerts are set only if the network interface maximum speed is available.\r\n\r\nIf bit rate is < 50%, then status is set to \"OK\".\r\n\r\nIf bit rate is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf bit rate is > 70%, then status is set to \"WARNING\".\r\n\r\nIf bit rate is > 90%, then status is set to \"CRITICAL\".\r\n\r\nFor example, on a 100 Mbps Ethernet interface, the warning status is set\r\nif the bit rate is higher than 70 Mbps.\r\n\r\n### Sensors (optional; only available on Linux)\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/sensors.png)\r\n\r\nOptionally, Glances displays the sensors informations (lm-sensors).\r\n\r\nA filter is processed in order to only display temperature.\r\n\r\nYou should enable this module using the following command line:\r\n\r\n    glances -e\r\n\r\nThere is no alert on this information.\r\n\r\n### Disk I/O\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/diskio.png)\r\n\r\nGlances displays the disk I/O throughput. The unit is adapted dynamically\r\n(bytes per second, Kbytes per second, Mbytes per second...).\r\n\r\nThere is no alert on this information.\r\n\r\n### Filesystem\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/fs.png)\r\n\r\nGlances displays the total and used filesytem disk space. The unit is\r\nadapted dynamically (bytes per second, Kbytes per second, Mbytes per\r\nsecond...).\r\n\r\nAlerts are set for used disk space:\r\n\r\nIf disk used is < 50%, then status is set to \"OK\".\r\n\r\nIf disk used is > 50%, then status is set to \"CAREFUL\".\r\n\r\nIf disk used is > 70%, then status is set to \"WARNING\".\r\n\r\nIf disk used is > 90%, then status is set to \"CRITICAL\".\r\n\r\n### Processes\r\n\r\nShort view:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/processlist.png)\r\n\r\nLong view (only available if your terminal is wide enough)\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/processlist-wide.png)\r\n\r\nGlances displays a summary and a list of processes.\r\n\r\nBy default (or if you hit the 'a' key) the process list is automatically\r\nsorted by CPU of memory consumption.\r\n\r\nThe number of processes in the list is adapted to the screen size.\r\n\r\n* VIRT: Virtual memory size (in byte)\r\n* REST: Amount of resident memory (in byte)\r\n* CPU%: % of CPU used by the process\r\n* MEM%: % of MEM used by the process\r\n* PID: Process ID\r\n* USER: Process user ID\r\n* NI: Nice level of the process\r\n* S: Process status\r\n\r\n   R - Running\r\n   D - Sleeping (may not be interrupted)\r\n   S - Sleeping (may be interrupted)\r\n   T - Traced or stopped\r\n   Z - Zombie or \"hung\" process\r\n\r\n* TIME+:  Cumulative CPU time used\r\n* IO_R and IO_W: Per process IO read and write rate (in byte per second)\r\n* NAME: Process name or command line\r\n\r\n### Logs\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/logs.png)\r\n\r\nA logs list is displayed in the bottom of the screen if (and only if):\r\n\r\n* at least one WARNING or CRITICAL alert was occured.\r\n* space is available in the bottom of the console/terminal\r\n\r\nThere is one line per alert with the following information:\r\n\r\n* start date\r\n* end date\r\n* alert name\r\n* (min/avg/max) values\r\n\r\n### Footer\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/footer.png)\r\n\r\nGlances displays the current time/date and access to the embedded help screen.\r\n\r\nIf you have ran Glances in client mode (-c), you can also see if the client is connected to the server.\r\n\r\nIf client is connected:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/client-connected.png)\r\n\r\nelse:\r\n\r\n![screenshot](https://github.com/nicolargo/glances/raw/master/doc/client-disconnected.png)\r\n\r\nOn the left, you can easely seen if you are connected to a Glances server.\r\n\r\n## Localisation\r\n\r\nGlances localization files exist for:\r\n\r\n* English (default langage)\r\n* French\r\n* Italian\r\n* Spanish\r\n* Portugal\r\n\r\nFeel free to contribute !\r\n","google":"UA–115490–11","note":"Don't delete this file! It's used internally to help with page regeneration."}